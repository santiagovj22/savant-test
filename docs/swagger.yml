openapi: 3.0.0
info:
  title: Savant API
  version: "1.0"
  description: Rest API for Savant
paths:
  /api/auth/login:
    post:
      summary: Create a new user
      operationId: create_user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Token"
  /api/users/:
    get:
      summary: Get all users
      operationId: get_users
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
  
  /api/users/{user_id}:
    get:
      summary: Fetch a user by ID
      operationId: get_user
      parameters:
        - name: user_id
          in: path
          required: true
          description: The user identifier
          schema:
            type: string
        - name: Authorization Bearer
          in: header
          required: true
          description: The user token
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found

    patch:
      summary: Fetch a user by ID
      operationId: update_user
      parameters:
        - name: user_id
          in: path
          required: true
          description: The user identifier
          schema:
            type: string
        - name: Authorization Bearer
          in: header
          required: true
          description: The user token
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
        "404":
          description: User not found
    
    delete:
      summary: Remove a user by ID
      operationId: remove_user
      parameters:
        - name: user_id
          in: path
          required: true
          description: The user identifier
          schema:
            type: string
        - name: Authorization Bearer
          in: header
          required: true
          description: The user token
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
        "404":
          description: User not found
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          description: The user ID
        full_name:
          type: string
          description: The user full name
        email:
          type: string
          description: The user email
        cellphone:
          type: string
          description: The user cellphone
        password:
          type: string
          description: The user password
      required:
        - id
        - full_name
        - email
        - password
        - cellphone
    Token:
      type: object
      properties:
        token:
          type: string
          description: The user token
      required:
        - token
    Message:
      type: object
      properties:
        message:
          type: string
          description: The message
      required:
        - message
